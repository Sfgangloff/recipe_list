[{"/home/silvere/Desktop/Apps/recipelist/src/index.js":"1","/home/silvere/Desktop/Apps/recipelist/src/App.js":"2","/home/silvere/Desktop/Apps/recipelist/src/firebase.config.js":"3","/home/silvere/Desktop/Apps/recipelist/src/editable.js":"4","/home/silvere/Desktop/Apps/recipelist/src/editablelist.js":"5"},{"size":254,"mtime":1668615295751,"results":"6","hashOfConfig":"7"},{"size":11406,"mtime":1672088942869,"results":"8","hashOfConfig":"7"},{"size":601,"mtime":1668615814900,"results":"9","hashOfConfig":"7"},{"size":2483,"mtime":1670490198986,"results":"10","hashOfConfig":"7"},{"size":1981,"mtime":1670491764147,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"13le8pv",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"15"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"15"},"/home/silvere/Desktop/Apps/recipelist/src/index.js",[],[],[],"/home/silvere/Desktop/Apps/recipelist/src/App.js",["31","32","33","34","35","36","37","38","39","40","41"],[],"/home/silvere/Desktop/Apps/recipelist/src/firebase.config.js",["42"],[],"import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\"; \n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDUWZQp7u-MI3fxDaIeohNDr7vmy7mUIR4\",\n  authDomain: \"recipes-394c2.firebaseapp.com\",\n  projectId: \"recipes-394c2\",\n  storageBucket: \"recipes-394c2.appspot.com\",\n  messagingSenderId: \"83409877153\",\n  appId: \"1:83409877153:web:68763b948cbd823c12d8e0\",\n  measurementId: \"G-YKQLZJCXYM\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\nconst db = getFirestore(app);\n\nexport { db }","/home/silvere/Desktop/Apps/recipelist/src/editable.js",["43","44","45","46","47","48","49","50","51"],[],"import { db } from \"./firebase.config\"\nimport { relativeTimeRounding } from 'moment';\nimport React, { Component, createRef } from 'react';\nimport {collection, doc, addDoc, getDoc, setDoc, updateDoc, deleteDoc} from \"firebase/firestore\"\nimport { v4 } from 'uuid';\n\nclass Comment extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n        id:this.props.id,\n        text:this.props.text,\n        recipeId:this.props.recipeId,\n        isInEditMode:false, \n        addComment:this.props.addComment,\n        removeComment:this.props.removeComment\n      }\n\n    this.selfRef = React.createRef()\n\n\n    this.changeEditMode = this.changeEditMode.bind(this)\n    this.renderEditView = this.renderEditView.bind(this)\n    this.renderDefaultView = this.renderDefaultView.bind(this)\n    this.updateComponentValue = this.updateComponentValue.bind(this)\n  \n}\n\n\nchangeEditMode() {\n  this.setState(\n    {\n      isInEditMode:!this.state.isInEditMode\n    }\n  )\n}\n\n\n\nupdateComponentValue = async (e) => {\n  const commentsCollectionRef = collection(db,\"comments\")\n  const commentRef = doc(db,\"comments\",this.state.id)\n  const initialValue = this.state.text\n  //const newValue = this.refs.theTextInput.value\n  const newValue = this.selfRef.current.value\n\n  if (e.key === \"Enter\") {\n    if (initialValue === \"############################################################\") {\n      if (newValue !== initialValue && newValue !==\"\") {\n        this.state.addComment(newValue)\n        //var x = v4();\n        //const timestamp = Date.now()\n        //await setDoc(doc(db, \"comments\", x),{recipeId:this.state.recipeId,text:newValue,timestamp:timestamp})\n      }\n    } \n    else {\n      if (newValue !== \"\") {\n        this.setState({text:newValue})\n        await updateDoc(doc(db, \"comments\", this.state.id),{text:newValue})\n      } else {\n        this.state.removeComment(this.state.id)\n        //await deleteDoc(doc(db,\"comments\",this.state.id))\n      }\n      }\n    this.setState({\n    isInEditMode:false\n  })\n    \n  }\n}\n\n\nrenderEditView() {\n  return <div>\n    <input type=\"text\" \n           defaultValue={this.state.text}\n           //ref=\"theTextInput\" \n           ref = {this.selfRef} onKeyPress={this.updateComponentValue}/>\n  </div>\n}\n\nrenderDefaultView() {\n  return <div onDoubleClick = {this.changeEditMode}> \n  {this.state.text}\n</div>\n}\n\n  render() {\n    return this.state.isInEditMode ? \n     this.renderEditView() : this.renderDefaultView()\n    \n  }\n}\n\nexport default Comment;","/home/silvere/Desktop/Apps/recipelist/src/editablelist.js",["52","53","54","55","56","57"],[],"import { db } from \"./firebase.config\"\nimport { relativeTimeRounding } from 'moment';\nimport React, { Component, createRef } from 'react';\nimport {collection, doc, addDoc, getDoc, setDoc, updateDoc, deleteDoc} from \"firebase/firestore\"\nimport { v4 } from 'uuid';\n\nimport Comment from './editable.js';\n\nclass CommentList extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n        recipeId:this.props.recipeId,\n        comments:this.props.comments\n      }\n\n\n    this.addComment = this.addComment.bind(this)\n    this.removeComment = this.removeComment.bind(this)\n  \n}\n\n\naddComment= async (text) => {\n  var x = v4();\n  const timestamp = Date.now()\n  const comments = this.state.comments\n  comments.push({id:x,recipeId:this.state.recipeId,text:text,timestamp:timestamp})\n  comments.sort((a, b) =>\n      a.timestamp < b.timestamp ? -1 : 1,\n      )\n  this.setState({comments:comments})\n  await setDoc(doc(db, \"comments\", x),{recipeId:this.state.recipeId,text:text,timestamp:timestamp})\n  \n}\n\nremoveComment = async (id) => {\n  const comments = this.state.comments\n  for(var i = 0; i < comments.length; i++){ \n    \n    if ( comments[i].id === id) { \n\n        comments.splice(i, 1)\n        \n    }\n    console.log(comments)\n  }\n  comments.sort((a, b) =>\n      a.timestamp < b.timestamp ? -1 : 1,\n      )\n    await deleteDoc(doc(db,\"comments\",id))\n    this.setState({comments:comments})\n  }\n\n\n\n  render() {\n     return  <ol>{this.state.comments.sort((a, b) =>\n      a.timestamp < b.timestamp ? -1 : 1,\n      ).map((comment,i) => (\n               <li key={i}> {(comment.recipeId === this.state.recipeId) ? \n               <Comment id={comment.id} \n                        text={comment.text} \n                        recipeId={comment.recipeId} \n                        addComment={this.addComment} \n                        removeComment={this.removeComment}/>   : <div></div>} </li>\n                     ))}\n           </ol>\n    \n  }\n}\n\nexport default CommentList;",{"ruleId":"58","severity":1,"message":"59","line":4,"column":43,"nodeType":"60","messageId":"61","endLine":4,"endColumn":46},{"ruleId":"62","severity":1,"message":"63","line":55,"column":8,"nodeType":"64","endLine":55,"endColumn":10,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":195,"column":7,"nodeType":"68","endLine":198,"endColumn":15},{"ruleId":"66","severity":1,"message":"67","line":222,"column":17,"nodeType":"68","endLine":222,"endColumn":173},{"ruleId":"66","severity":1,"message":"67","line":228,"column":19,"nodeType":"68","endLine":228,"endColumn":166},{"ruleId":"66","severity":1,"message":"67","line":229,"column":17,"nodeType":"68","endLine":234,"endColumn":41},{"ruleId":"66","severity":1,"message":"67","line":235,"column":17,"nodeType":"68","endLine":235,"endColumn":240},{"ruleId":"66","severity":1,"message":"67","line":300,"column":21,"nodeType":"68","endLine":301,"endColumn":85},{"ruleId":"66","severity":1,"message":"67","line":317,"column":1,"nodeType":"68","endLine":318,"endColumn":79},{"ruleId":"66","severity":1,"message":"67","line":329,"column":43,"nodeType":"68","endLine":329,"endColumn":105},{"ruleId":"66","severity":1,"message":"67","line":330,"column":81,"nodeType":"68","endLine":330,"endColumn":143},{"ruleId":"58","severity":1,"message":"69","line":16,"column":7,"nodeType":"60","messageId":"61","endLine":16,"endColumn":16},{"ruleId":"58","severity":1,"message":"70","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":30},{"ruleId":"58","severity":1,"message":"71","line":3,"column":28,"nodeType":"60","messageId":"61","endLine":3,"endColumn":37},{"ruleId":"58","severity":1,"message":"72","line":4,"column":26,"nodeType":"60","messageId":"61","endLine":4,"endColumn":32},{"ruleId":"58","severity":1,"message":"73","line":4,"column":34,"nodeType":"60","messageId":"61","endLine":4,"endColumn":40},{"ruleId":"58","severity":1,"message":"74","line":4,"column":42,"nodeType":"60","messageId":"61","endLine":4,"endColumn":48},{"ruleId":"58","severity":1,"message":"75","line":4,"column":61,"nodeType":"60","messageId":"61","endLine":4,"endColumn":70},{"ruleId":"58","severity":1,"message":"76","line":5,"column":10,"nodeType":"60","messageId":"61","endLine":5,"endColumn":12},{"ruleId":"58","severity":1,"message":"77","line":43,"column":9,"nodeType":"60","messageId":"61","endLine":43,"endColumn":30},{"ruleId":"58","severity":1,"message":"78","line":44,"column":9,"nodeType":"60","messageId":"61","endLine":44,"endColumn":19},{"ruleId":"58","severity":1,"message":"70","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":30},{"ruleId":"58","severity":1,"message":"71","line":3,"column":28,"nodeType":"60","messageId":"61","endLine":3,"endColumn":37},{"ruleId":"58","severity":1,"message":"79","line":4,"column":9,"nodeType":"60","messageId":"61","endLine":4,"endColumn":19},{"ruleId":"58","severity":1,"message":"72","line":4,"column":26,"nodeType":"60","messageId":"61","endLine":4,"endColumn":32},{"ruleId":"58","severity":1,"message":"73","line":4,"column":34,"nodeType":"60","messageId":"61","endLine":4,"endColumn":40},{"ruleId":"58","severity":1,"message":"80","line":4,"column":50,"nodeType":"60","messageId":"61","endLine":4,"endColumn":59},"no-unused-vars","'put' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'commentsCollectionRef' and 'recipesCollectionRef'. Either include them or remove the dependency array.","ArrayExpression",["81"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'analytics' is assigned a value but never used.","'relativeTimeRounding' is defined but never used.","'createRef' is defined but never used.","'addDoc' is defined but never used.","'getDoc' is defined but never used.","'setDoc' is defined but never used.","'deleteDoc' is defined but never used.","'v4' is defined but never used.","'commentsCollectionRef' is assigned a value but never used.","'commentRef' is assigned a value but never used.","'collection' is defined but never used.","'updateDoc' is defined but never used.",{"desc":"82","fix":"83"},"Update the dependencies array to be: [commentsCollectionRef, recipesCollectionRef]",{"range":"84","text":"85"},[1468,1470],"[commentsCollectionRef, recipesCollectionRef]"]