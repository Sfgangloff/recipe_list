{"ast":null,"code":"var _jsxFileName = \"/home/silvere/Desktop/Apps/recipelist/src/editable.js\";\nimport { relativeTimeRounding } from 'moment';\nimport React, { Component } from 'react';\nimport { doc, addDoc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CommentList extends Component {\n  constructor(props) {\n    super(props);\n\n    // Note: Prend en entree une liste de commentaires à afficher\n    // Chaque commentaire est un editable, seulement un a la fois peut etre edite. \n    this.updateComponentValue = async (e, rank) => {\n      const newValue = this.refs.theTextInput + {\n        rank\n      }.value;\n      const recipe = await getDoc(this.state.recipe);\n      var comments = recipe.data().comments;\n      const newEditMode = [];\n      const valueLength = this.props.value.length;\n      for (let i = 0; i < valueLength; i++) {\n        newEditMode.push(false);\n      }\n      if (e.key === \"Enter\" && newValue !== \"\") {\n        comments[rank] = newValue;\n        this.setState({\n          value: comments\n        });\n        this.setState({\n          isInEditMode: newEditMode\n        });\n        await updateDoc(this.state.recipe, {\n          comments: comments\n        });\n      }\n      if (e.key === \"Enter\" && newValue === \"\") {\n        comments.splice(this.state.rank, 1);\n        comments.push(\"###################################################\");\n        this.setState({\n          isInEditMode: newEditMode\n        });\n        this.setState({\n          value: comments\n        });\n        await updateDoc(this.state.recipe, {\n          comments: comments\n        });\n      }\n    };\n    const _valueLength = this.props.value.length;\n    const isInEditMode = [];\n    for (let i = 0; i < _valueLength; i++) {\n      isInEditMode.push(false);\n    }\n    this.state = {\n      value: this.props.value,\n      isInEditMode: isInEditMode,\n      recipe: this.props.recipe\n    };\n    this.changeEditMode = this.changeEditMode.bind(this);\n    this.renderEditView = this.renderEditView.bind(this);\n    this.renderDefaultView = this.renderDefaultView.bind(this);\n    this.updateComponentValue = this.updateComponentValue.bind(this);\n  }\n  changeEditMode(j) {\n    const newEditMode = [];\n    const valueLength = this.props.value.length;\n    for (let i = 0; i < valueLength; i++) {\n      if (i === j) {\n        newEditMode.push(false);\n      } else {\n        newEditMode.push(true);\n      }\n    }\n    this.setState({\n      isInEditMode: newEditMode\n    });\n  }\n  renderEditView(rank) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: this.state.value[rank],\n        ref: \"textInput\" + {\n          rank\n        },\n        onKeyPress: this.updateComponentValue(rank)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }, this);\n  }\n  renderDefaultView(rank) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: \"onlyText\" + {\n        rank\n      },\n      onDoubleClick: this.changeEditMode(rank),\n      children: this.state.value[rank]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 10\n    }, this);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: recipe.comments.map((comment, rank) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", this.state.isInEditMode[rank] ? this.renderEditView(rank) : this.renderDefaultView(rank), \" \"]\n      }, rank, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default CommentList;","map":{"version":3,"names":["relativeTimeRounding","React","Component","doc","addDoc","getDoc","updateDoc","CommentList","constructor","props","updateComponentValue","e","rank","newValue","refs","theTextInput","value","recipe","state","comments","data","newEditMode","valueLength","length","i","push","key","setState","isInEditMode","splice","changeEditMode","bind","renderEditView","renderDefaultView","j","render","map","comment"],"sources":["/home/silvere/Desktop/Apps/recipelist/src/editable.js"],"sourcesContent":["import { relativeTimeRounding } from 'moment';\nimport React, { Component } from 'react';\nimport {doc, addDoc, getDoc, updateDoc} from \"firebase/firestore\"\n\n\nclass CommentList extends Component {\n\n  constructor(props) {\n    super(props)\n\n    // Note: Prend en entree une liste de commentaires à afficher\n    // Chaque commentaire est un editable, seulement un a la fois peut etre edite. \n\n    const valueLength = this.props.value.length\n    const isInEditMode=[]\n    for (let i=0; i < valueLength; i++) {\n      isInEditMode.push(false)\n    }\n    \n\n     this.state = {\n        value:this.props.value, \n        isInEditMode:isInEditMode,\n        recipe:this.props.recipe\n      }\n\n    this.changeEditMode = this.changeEditMode.bind(this)\n    this.renderEditView = this.renderEditView.bind(this)\n    this.renderDefaultView = this.renderDefaultView.bind(this)\n    this.updateComponentValue = this.updateComponentValue.bind(this)\n    \n  \n}\n\nchangeEditMode(j) {\n  const newEditMode=[]\n  const valueLength = this.props.value.length\n  for (let i=0; i < valueLength; i++) {\n    if (i===j) {\n      newEditMode.push(false)\n    } else {\n      newEditMode.push(true)\n    }\n  }\n\n  this.setState(\n    {\n      isInEditMode:newEditMode\n    }\n  )\n}\n\nupdateComponentValue = async (e,rank) => {\n  const newValue = this.refs.theTextInput+{rank}.value\n  const recipe = await getDoc(this.state.recipe);\n  var comments = recipe.data().comments\n\n  const newEditMode=[]\n  const valueLength = this.props.value.length\n  for (let i=0; i < valueLength; i++) {\n      newEditMode.push(false) \n    }\n\n  if (e.key === \"Enter\" && newValue !==\"\") {\n    comments[rank] = newValue\n\n    this.setState({\n        value:comments})\n    this.setState({\n        isInEditMode:newEditMode})\n    \n    await updateDoc(this.state.recipe,{comments:comments})\n    }\n    \n\n  if (e.key === \"Enter\" && newValue ===\"\") {\n    comments.splice(this.state.rank,1)\n    comments.push(\"###################################################\")\n    this.setState({\n    isInEditMode:newEditMode})\n    this.setState({\n      value:comments})\n    \n    await updateDoc(this.state.recipe,{comments:comments})\n}\n}\n\nrenderEditView(rank) {\n\n  return <div>\n    <input type=\"text\" \n           defaultValue={this.state.value[rank]}\n           ref={\"textInput\" + {rank}} onKeyPress={this.updateComponentValue(rank)}/>\n  </div>\n}\n\nrenderDefaultView(rank) {\n  return <div ref={\"onlyText\"+{rank}} onDoubleClick = {this.changeEditMode(rank)}> \n  {this.state.value[rank]}\n</div>\n}\n\n  render() {\n    return <ol>{recipe.comments.map((comment,rank) => (\n      <li key={rank}> {this.state.isInEditMode[rank] ? \n      this.renderEditView(rank) : this.renderDefaultView(rank)} </li>\n    ))}\n    </ol>\n    \n    \n  }\n}\n\nexport default CommentList;\n"],"mappings":";AAAA,SAASA,oBAAoB,QAAQ,QAAQ;AAC7C,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAAQC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAO,oBAAoB;AAAA;AAGjE,MAAMC,WAAW,SAASL,SAAS,CAAC;EAElCM,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;;IAEZ;IACA;IAAA,KAyCJC,oBAAoB,GAAG,OAAOC,CAAC,EAACC,IAAI,KAAK;MACvC,MAAMC,QAAQ,GAAG,IAAI,CAACC,IAAI,CAACC,YAAY,GAAC;QAACH;MAAI,CAAC,CAACI,KAAK;MACpD,MAAMC,MAAM,GAAG,MAAMZ,MAAM,CAAC,IAAI,CAACa,KAAK,CAACD,MAAM,CAAC;MAC9C,IAAIE,QAAQ,GAAGF,MAAM,CAACG,IAAI,EAAE,CAACD,QAAQ;MAErC,MAAME,WAAW,GAAC,EAAE;MACpB,MAAMC,WAAW,GAAG,IAAI,CAACb,KAAK,CAACO,KAAK,CAACO,MAAM;MAC3C,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGF,WAAW,EAAEE,CAAC,EAAE,EAAE;QAChCH,WAAW,CAACI,IAAI,CAAC,KAAK,CAAC;MACzB;MAEF,IAAId,CAAC,CAACe,GAAG,KAAK,OAAO,IAAIb,QAAQ,KAAI,EAAE,EAAE;QACvCM,QAAQ,CAACP,IAAI,CAAC,GAAGC,QAAQ;QAEzB,IAAI,CAACc,QAAQ,CAAC;UACVX,KAAK,EAACG;QAAQ,CAAC,CAAC;QACpB,IAAI,CAACQ,QAAQ,CAAC;UACVC,YAAY,EAACP;QAAW,CAAC,CAAC;QAE9B,MAAMf,SAAS,CAAC,IAAI,CAACY,KAAK,CAACD,MAAM,EAAC;UAACE,QAAQ,EAACA;QAAQ,CAAC,CAAC;MACtD;MAGF,IAAIR,CAAC,CAACe,GAAG,KAAK,OAAO,IAAIb,QAAQ,KAAI,EAAE,EAAE;QACvCM,QAAQ,CAACU,MAAM,CAAC,IAAI,CAACX,KAAK,CAACN,IAAI,EAAC,CAAC,CAAC;QAClCO,QAAQ,CAACM,IAAI,CAAC,qDAAqD,CAAC;QACpE,IAAI,CAACE,QAAQ,CAAC;UACdC,YAAY,EAACP;QAAW,CAAC,CAAC;QAC1B,IAAI,CAACM,QAAQ,CAAC;UACZX,KAAK,EAACG;QAAQ,CAAC,CAAC;QAElB,MAAMb,SAAS,CAAC,IAAI,CAACY,KAAK,CAACD,MAAM,EAAC;UAACE,QAAQ,EAACA;QAAQ,CAAC,CAAC;MAC1D;IACA,CAAC;IAxEG,MAAMG,YAAW,GAAG,IAAI,CAACb,KAAK,CAACO,KAAK,CAACO,MAAM;IAC3C,MAAMK,YAAY,GAAC,EAAE;IACrB,KAAK,IAAIJ,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGF,YAAW,EAAEE,CAAC,EAAE,EAAE;MAClCI,YAAY,CAACH,IAAI,CAAC,KAAK,CAAC;IAC1B;IAGC,IAAI,CAACP,KAAK,GAAG;MACVF,KAAK,EAAC,IAAI,CAACP,KAAK,CAACO,KAAK;MACtBY,YAAY,EAACA,YAAY;MACzBX,MAAM,EAAC,IAAI,CAACR,KAAK,CAACQ;IACpB,CAAC;IAEH,IAAI,CAACa,cAAc,GAAG,IAAI,CAACA,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACD,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACE,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACF,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACrB,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACqB,IAAI,CAAC,IAAI,CAAC;EAGpE;EAEAD,cAAc,CAACI,CAAC,EAAE;IAChB,MAAMb,WAAW,GAAC,EAAE;IACpB,MAAMC,WAAW,GAAG,IAAI,CAACb,KAAK,CAACO,KAAK,CAACO,MAAM;IAC3C,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAGF,WAAW,EAAEE,CAAC,EAAE,EAAE;MAClC,IAAIA,CAAC,KAAGU,CAAC,EAAE;QACTb,WAAW,CAACI,IAAI,CAAC,KAAK,CAAC;MACzB,CAAC,MAAM;QACLJ,WAAW,CAACI,IAAI,CAAC,IAAI,CAAC;MACxB;IACF;IAEA,IAAI,CAACE,QAAQ,CACX;MACEC,YAAY,EAACP;IACf,CAAC,CACF;EACH;EAqCAW,cAAc,CAACpB,IAAI,EAAE;IAEnB,oBAAO;MAAA,uBACL;QAAO,IAAI,EAAC,MAAM;QACX,YAAY,EAAE,IAAI,CAACM,KAAK,CAACF,KAAK,CAACJ,IAAI,CAAE;QACrC,GAAG,EAAE,WAAW,GAAG;UAACA;QAAI,CAAE;QAAC,UAAU,EAAE,IAAI,CAACF,oBAAoB,CAACE,IAAI;MAAE;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC5E;EACR;EAEAqB,iBAAiB,CAACrB,IAAI,EAAE;IACtB,oBAAO;MAAK,GAAG,EAAE,UAAU,GAAC;QAACA;MAAI,CAAE;MAAC,aAAa,EAAI,IAAI,CAACkB,cAAc,CAAClB,IAAI,CAAE;MAAA,UAC9E,IAAI,CAACM,KAAK,CAACF,KAAK,CAACJ,IAAI;IAAC;MAAA;MAAA;MAAA;IAAA,QACnB;EACN;EAEEuB,MAAM,GAAG;IACP,oBAAO;MAAA,UAAKlB,MAAM,CAACE,QAAQ,CAACiB,GAAG,CAAC,CAACC,OAAO,EAACzB,IAAI,kBAC3C;QAAA,gBAAiB,IAAI,CAACM,KAAK,CAACU,YAAY,CAAChB,IAAI,CAAC,GAC9C,IAAI,CAACoB,cAAc,CAACpB,IAAI,CAAC,GAAG,IAAI,CAACqB,iBAAiB,CAACrB,IAAI,CAAC;MAAA,GAD/CA,IAAI;QAAA;QAAA;QAAA;MAAA,QAEd;IAAC;MAAA;MAAA;MAAA;IAAA,QACG;EAGP;AACF;AAEA,eAAeL,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}