{"ast":null,"code":"var _jsxFileName = \"/home/silvere/Desktop/Apps/recipelist/src/editable.js\";\nimport { relativeTimeRounding } from 'moment';\nimport React, { Component } from 'react';\nimport { doc, addDoc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CommentList extends Component {\n  constructor(props) {\n    super(props);\n    this.changeEditMode = j => {\n      const newEditMode = [];\n      const valueLength = this.props.value.length;\n      for (let i = 0; i < valueLength; i++) {\n        if (i === j) {\n          newEditMode.push(false);\n        } else {\n          newEditMode.push(true);\n        }\n      }\n      this.setState({\n        isInEditMode: newEditMode\n      });\n    };\n    this.updateComponentValue = async (e, rank) => {\n      const newValue = \"\";\n      const recipe = await getDoc(this.state.recipe);\n      var comments = recipe.data().comments;\n      const newEditMode = [];\n      const valueLength = this.props.value.length;\n      for (let i = 0; i < valueLength; i++) {\n        newEditMode.push(false);\n      }\n      if (e.key === \"Enter\" && newValue !== \"\") {\n        comments[rank] = newValue;\n        this.setState({\n          value: comments\n        });\n        this.setState({\n          isInEditMode: newEditMode\n        });\n        await updateDoc(this.state.recipe, {\n          comments: comments\n        });\n      }\n      if (e.key === \"Enter\" && newValue === \"\") {\n        comments.splice(this.state.rank, 1);\n        comments.push(\"###################################################\");\n        this.setState({\n          isInEditMode: newEditMode\n        });\n        this.setState({\n          value: comments\n        });\n        await updateDoc(this.state.recipe, {\n          comments: comments\n        });\n      }\n    };\n    this.renderEditView = rank => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          defaultValue: this.state.value[rank],\n          ref: \"textInput\" + {\n            rank\n          },\n          onKeyPress: e => this.updateComponentValue(e, rank)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 10\n      }, this);\n    };\n    this.renderDefaultView = rank => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: \"onlyText\" + {\n          rank\n        },\n        onDoubleClick: e => this.changeEditMode(rank),\n        children: this.state.value[rank]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }, this);\n    };\n    const _valueLength = this.props.value.length;\n    const isInEditMode = [];\n    for (let i = 0; i < _valueLength; i++) {\n      isInEditMode.push(false);\n    }\n    this.state = {\n      value: this.props.value,\n      isInEditMode: isInEditMode,\n      recipe: this.props.recipe\n    };\n    this.changeEditMode = this.changeEditMode.bind(this);\n    this.renderEditView = this.renderEditView.bind(this);\n    this.renderDefaultView = this.renderDefaultView.bind(this);\n    this.updateComponentValue = this.updateComponentValue.bind(this);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: this.state.value.map((comment, rank) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", this.state.isInEditMode[rank] ? this.renderEditView(rank) : this.renderDefaultView(rank), \" \"]\n      }, rank, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default CommentList;","map":{"version":3,"names":["relativeTimeRounding","React","Component","doc","addDoc","getDoc","updateDoc","CommentList","constructor","props","changeEditMode","j","newEditMode","valueLength","value","length","i","push","setState","isInEditMode","updateComponentValue","e","rank","newValue","recipe","state","comments","data","key","splice","renderEditView","renderDefaultView","bind","render","map","comment"],"sources":["/home/silvere/Desktop/Apps/recipelist/src/editable.js"],"sourcesContent":["import { relativeTimeRounding } from 'moment';\nimport React, { Component } from 'react';\nimport {doc, addDoc, getDoc, updateDoc} from \"firebase/firestore\"\n\n\nclass CommentList extends Component {\n\n  constructor(props) {\n    super(props)\n\n    const valueLength = this.props.value.length\n    const isInEditMode=[]\n    for (let i=0; i < valueLength; i++) {\n      isInEditMode.push(false)\n    }\n    \n\n    this.state = {\n        value:this.props.value, \n        isInEditMode:isInEditMode,\n        recipe:this.props.recipe\n      }\n\n    this.changeEditMode = this.changeEditMode.bind(this)\n    this.renderEditView = this.renderEditView.bind(this)\n    this.renderDefaultView = this.renderDefaultView.bind(this)\n    this.updateComponentValue = this.updateComponentValue.bind(this)\n    \n  \n}\n\nchangeEditMode = (j) => {\n  const newEditMode=[]\n  const valueLength = this.props.value.length\n  for (let i=0; i < valueLength; i++) {\n    if (i===j) {\n      newEditMode.push(false)\n    } else {\n      newEditMode.push(true)\n    }\n  }\n\n  this.setState(\n    {\n      isInEditMode:newEditMode\n    }\n  )\n}\n\nupdateComponentValue = async (e,rank) => {\n  const newValue = \"\"\n  const recipe = await getDoc(this.state.recipe);\n  var comments = recipe.data().comments\n\n  const newEditMode=[]\n  const valueLength = this.props.value.length\n  for (let i=0; i < valueLength; i++) {\n      newEditMode.push(false) \n    }\n\n  if (e.key === \"Enter\" && newValue !==\"\") {\n    comments[rank] = newValue\n\n    this.setState({\n        value:comments})\n    this.setState({\n        isInEditMode:newEditMode})\n    \n    await updateDoc(this.state.recipe,{comments:comments})\n    }\n    \n\n  if (e.key === \"Enter\" && newValue ===\"\") {\n    comments.splice(this.state.rank,1)\n    comments.push(\"###################################################\")\n    this.setState({\n    isInEditMode:newEditMode})\n    this.setState({\n      value:comments})\n    \n    await updateDoc(this.state.recipe,{comments:comments})\n}\n}\n\nrenderEditView = (rank) => {\n\n  return <div>\n    <input type=\"text\" \n           defaultValue={this.state.value[rank]}\n           ref={\"textInput\" + {rank}} onKeyPress={(e) => this.updateComponentValue(e,rank)}/>\n            \n  </div>\n}\n\nrenderDefaultView = (rank) => {\n  return <div ref={\"onlyText\"+{rank}}\n  onDoubleClick = {(e) => this.changeEditMode(rank)}> \n  {this.state.value[rank]}\n  \n</div>\n}\n\nrender() {     \n  \n    return <ol>{this.state.value.map((comment,rank) => (\n      <li key={rank}> {this.state.isInEditMode[rank] ? \n      this.renderEditView(rank) : this.renderDefaultView(rank)} </li>\n    ))}\n    </ol>\n    \n  }\n}\n\nexport default CommentList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}