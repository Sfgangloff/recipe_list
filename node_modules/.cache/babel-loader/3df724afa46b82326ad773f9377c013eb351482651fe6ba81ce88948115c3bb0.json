{"ast":null,"code":"var _jsxFileName = \"/home/silvere/Desktop/Apps/recipelist/src/editable.js\";\nimport { relativeTimeRounding } from 'moment';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Comment extends Component {\n  constructor(props) {\n    super(props);\n    if (this.props.value != \"\") {\n      this.state = {\n        value: this.props.value,\n        isInEditMode: false,\n        docId: this.props.recipeId,\n        ref: this.props.recipeRef\n      };\n    } else {\n      this.state = {\n        value: \"###################################################\",\n        isInEditMode: false,\n        docId: this.props.recipeId,\n        ref: this.props.recipeRef\n      };\n    }\n    this.changeEditMode = this.changeEditMode.bind(this);\n    this.renderEditView = this.renderEditView.bind(this);\n    this.renderDefaultView = this.renderDefaultView.bind(this);\n    this.updateComponentValue = this.updateComponentValue.bind(this);\n  }\n  changeEditMode() {\n    this.setState({\n      isInEditMode: !this.state.isInEditMode\n    });\n  }\n  updateComponentValue(e) {\n    if (e.key == \"Enter\") {\n      this.setState({\n        isInEditMode: false,\n        value: this.refs.theTextInput.value\n      });\n    }\n  }\n  renderEditView() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: this.state.value,\n        ref: \"theTextInput\",\n        onKeyPress: this.updateComponentValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }, this);\n  }\n  renderDefaultView() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onDoubleClick: this.changeEditMode,\n      children: this.state.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }, this);\n  }\n  render() {\n    return this.state.isInEditMode ? this.renderEditView() : this.renderDefaultView();\n  }\n}\nexport default Comment;","map":{"version":3,"names":["relativeTimeRounding","React","Component","Comment","constructor","props","value","state","isInEditMode","docId","recipeId","ref","recipeRef","changeEditMode","bind","renderEditView","renderDefaultView","updateComponentValue","setState","e","key","refs","theTextInput","render"],"sources":["/home/silvere/Desktop/Apps/recipelist/src/editable.js"],"sourcesContent":["import { relativeTimeRounding } from 'moment';\nimport React, { Component } from 'react';\n\nclass Comment extends Component {\n\n  constructor(props) {\n    super(props)\n\n    if (this.props.value!=\"\") {\n      this.state = {\n        value:this.props.value, \n        isInEditMode:false,\n        docId:this.props.recipeId,\n        ref:this.props.recipeRef\n      }\n    } else {\n      this.state = {\n        value:\"###################################################\", \n        isInEditMode:false,\n        docId:this.props.recipeId,\n        ref:this.props.recipeRef\n      }\n    }\n\n    this.changeEditMode = this.changeEditMode.bind(this)\n    this.renderEditView = this.renderEditView.bind(this)\n    this.renderDefaultView = this.renderDefaultView.bind(this)\n    this.updateComponentValue = this.updateComponentValue.bind(this)\n    \n  \n}\n\nchangeEditMode() {\n  this.setState(\n    {\n      isInEditMode:!this.state.isInEditMode\n    }\n  )\n}\n\nupdateComponentValue(e) {\n  if (e.key == \"Enter\") {\n    this.setState({\n    isInEditMode:false,\n    value: this.refs.theTextInput.value\n  })\n  }\n}\n\nrenderEditView() {\n\n  return <div>\n    <input type=\"text\" \n           defaultValue={this.state.value}\n           ref=\"theTextInput\" onKeyPress={this.updateComponentValue}/>\n  </div>\n}\n\nrenderDefaultView() {\n  return <div onDoubleClick = {this.changeEditMode}> \n  {this.state.value}\n</div>\n}\n\n  render() {\n    return this.state.isInEditMode ? \n     this.renderEditView() : this.renderDefaultView()\n    \n  }\n}\n\nexport default Comment;\n"],"mappings":";AAAA,SAASA,oBAAoB,QAAQ,QAAQ;AAC7C,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAEzC,MAAMC,OAAO,SAASD,SAAS,CAAC;EAE9BE,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,IAAI,CAACA,KAAK,CAACC,KAAK,IAAE,EAAE,EAAE;MACxB,IAAI,CAACC,KAAK,GAAG;QACXD,KAAK,EAAC,IAAI,CAACD,KAAK,CAACC,KAAK;QACtBE,YAAY,EAAC,KAAK;QAClBC,KAAK,EAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ;QACzBC,GAAG,EAAC,IAAI,CAACN,KAAK,CAACO;MACjB,CAAC;IACH,CAAC,MAAM;MACL,IAAI,CAACL,KAAK,GAAG;QACXD,KAAK,EAAC,qDAAqD;QAC3DE,YAAY,EAAC,KAAK;QAClBC,KAAK,EAAC,IAAI,CAACJ,KAAK,CAACK,QAAQ;QACzBC,GAAG,EAAC,IAAI,CAACN,KAAK,CAACO;MACjB,CAAC;IACH;IAEA,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACD,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACE,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACF,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACG,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACH,IAAI,CAAC,IAAI,CAAC;EAGpE;EAEAD,cAAc,GAAG;IACf,IAAI,CAACK,QAAQ,CACX;MACEV,YAAY,EAAC,CAAC,IAAI,CAACD,KAAK,CAACC;IAC3B,CAAC,CACF;EACH;EAEAS,oBAAoB,CAACE,CAAC,EAAE;IACtB,IAAIA,CAAC,CAACC,GAAG,IAAI,OAAO,EAAE;MACpB,IAAI,CAACF,QAAQ,CAAC;QACdV,YAAY,EAAC,KAAK;QAClBF,KAAK,EAAE,IAAI,CAACe,IAAI,CAACC,YAAY,CAAChB;MAChC,CAAC,CAAC;IACF;EACF;EAEAS,cAAc,GAAG;IAEf,oBAAO;MAAA,uBACL;QAAO,IAAI,EAAC,MAAM;QACX,YAAY,EAAE,IAAI,CAACR,KAAK,CAACD,KAAM;QAC/B,GAAG,EAAC,cAAc;QAAC,UAAU,EAAE,IAAI,CAACW;MAAqB;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC9D;EACR;EAEAD,iBAAiB,GAAG;IAClB,oBAAO;MAAK,aAAa,EAAI,IAAI,CAACH,cAAe;MAAA,UAChD,IAAI,CAACN,KAAK,CAACD;IAAK;MAAA;MAAA;MAAA;IAAA,QACb;EACN;EAEEiB,MAAM,GAAG;IACP,OAAO,IAAI,CAAChB,KAAK,CAACC,YAAY,GAC7B,IAAI,CAACO,cAAc,EAAE,GAAG,IAAI,CAACC,iBAAiB,EAAE;EAEnD;AACF;AAEA,eAAeb,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}