{"ast":null,"code":"var _jsxFileName = \"/home/silvere/Desktop/Apps/recipelist/src/editable.js\";\nimport { db } from \"./firebase.config\";\nimport { relativeTimeRounding } from 'moment';\nimport React, { Component, createRef } from 'react';\nimport { collection, doc, addDoc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Comment extends Component {\n  constructor(props) {\n    super(props);\n    this.updateComponentValue = async e => {\n      const commentsCollectionRef = collection(db, \"comments\");\n      const commentRef = doc(db, \"comments\", this.state.id);\n      if (e.key === \"Enter\") {\n        await updateDoc(commentRef, {\n          text: this.refs.theTextInput.value\n        });\n        this.setState({\n          isInEditMode: false\n        });\n      }\n    };\n    this.state = {\n      id: this.props.id,\n      text: this.props.text,\n      isInEditMode: false\n    };\n    this.changeEditMode = this.changeEditMode.bind(this);\n    this.renderEditView = this.renderEditView.bind(this);\n    this.renderDefaultView = this.renderDefaultView.bind(this);\n    this.updateComponentValue = this.updateComponentValue.bind(this);\n  }\n  changeEditMode() {\n    this.setState({\n      isInEditMode: !this.state.isInEditMode\n    });\n  }\n  renderEditView() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: this.state.text,\n        ref: \"theTextInput\",\n        onKeyPress: this.updateComponentValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }, this);\n  }\n  renderDefaultView() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onDoubleClick: this.changeEditMode,\n      children: this.state.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this);\n  }\n  render() {\n    return this.state.isInEditMode ? this.renderEditView() : this.renderDefaultView();\n  }\n}\nexport default Comment;","map":{"version":3,"names":["db","relativeTimeRounding","React","Component","createRef","collection","doc","addDoc","getDoc","updateDoc","Comment","constructor","props","updateComponentValue","e","commentsCollectionRef","commentRef","state","id","key","text","refs","theTextInput","value","setState","isInEditMode","changeEditMode","bind","renderEditView","renderDefaultView","render"],"sources":["/home/silvere/Desktop/Apps/recipelist/src/editable.js"],"sourcesContent":["import { db } from \"./firebase.config\"\nimport { relativeTimeRounding } from 'moment';\nimport React, { Component, createRef } from 'react';\nimport {collection, doc, addDoc, getDoc, updateDoc} from \"firebase/firestore\"\n\n\nclass Comment extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n        id:this.props.id,\n        text:this.props.text,\n        isInEditMode:false\n      }\n\n\n    this.changeEditMode = this.changeEditMode.bind(this)\n    this.renderEditView = this.renderEditView.bind(this)\n    this.renderDefaultView = this.renderDefaultView.bind(this)\n    this.updateComponentValue = this.updateComponentValue.bind(this)\n  \n}\n\n\nchangeEditMode() {\n  this.setState(\n    {\n      isInEditMode:!this.state.isInEditMode\n    }\n  )\n}\n\n\n\nupdateComponentValue = async (e) => {\n  const commentsCollectionRef = collection(db,\"comments\")\n  const commentRef = doc(db,\"comments\",this.state.id)\n  if (e.key === \"Enter\") {\n    await updateDoc(commentRef,{text:this.refs.theTextInput.value})\n    this.setState({\n    isInEditMode:false\n  })\n    \n  }\n}\n\n\nrenderEditView() {\n  return <div>\n    <input type=\"text\" \n           defaultValue={this.state.text}\n           ref=\"theTextInput\" onKeyPress={this.updateComponentValue}/>\n  </div>\n}\n\nrenderDefaultView() {\n  return <div onDoubleClick = {this.changeEditMode}> \n  {this.state.text}\n</div>\n}\n\n  render() {\n    return this.state.isInEditMode ? \n     this.renderEditView() : this.renderDefaultView()\n    \n  }\n}\n\nexport default Comment;"],"mappings":";AAAA,SAASA,EAAE,QAAQ,mBAAmB;AACtC,SAASC,oBAAoB,QAAQ,QAAQ;AAC7C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAAQC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAO,oBAAoB;AAAA;AAG7E,MAAMC,OAAO,SAASP,SAAS,CAAC;EAE9BQ,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAA,KA2BhBC,oBAAoB,GAAG,MAAOC,CAAC,IAAK;MAClC,MAAMC,qBAAqB,GAAGV,UAAU,CAACL,EAAE,EAAC,UAAU,CAAC;MACvD,MAAMgB,UAAU,GAAGV,GAAG,CAACN,EAAE,EAAC,UAAU,EAAC,IAAI,CAACiB,KAAK,CAACC,EAAE,CAAC;MACnD,IAAIJ,CAAC,CAACK,GAAG,KAAK,OAAO,EAAE;QACrB,MAAMV,SAAS,CAACO,UAAU,EAAC;UAACI,IAAI,EAAC,IAAI,CAACC,IAAI,CAACC,YAAY,CAACC;QAAK,CAAC,CAAC;QAC/D,IAAI,CAACC,QAAQ,CAAC;UACdC,YAAY,EAAC;QACf,CAAC,CAAC;MAEF;IACF,CAAC;IAnCG,IAAI,CAACR,KAAK,GAAG;MACTC,EAAE,EAAC,IAAI,CAACN,KAAK,CAACM,EAAE;MAChBE,IAAI,EAAC,IAAI,CAACR,KAAK,CAACQ,IAAI;MACpBK,YAAY,EAAC;IACf,CAAC;IAGH,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACD,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACE,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACF,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACd,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACc,IAAI,CAAC,IAAI,CAAC;EAEpE;EAGAD,cAAc,GAAG;IACf,IAAI,CAACF,QAAQ,CACX;MACEC,YAAY,EAAC,CAAC,IAAI,CAACR,KAAK,CAACQ;IAC3B,CAAC,CACF;EACH;EAiBAG,cAAc,GAAG;IACf,oBAAO;MAAA,uBACL;QAAO,IAAI,EAAC,MAAM;QACX,YAAY,EAAE,IAAI,CAACX,KAAK,CAACG,IAAK;QAC9B,GAAG,EAAC,cAAc;QAAC,UAAU,EAAE,IAAI,CAACP;MAAqB;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC9D;EACR;EAEAgB,iBAAiB,GAAG;IAClB,oBAAO;MAAK,aAAa,EAAI,IAAI,CAACH,cAAe;MAAA,UAChD,IAAI,CAACT,KAAK,CAACG;IAAI;MAAA;MAAA;MAAA;IAAA,QACZ;EACN;EAEEU,MAAM,GAAG;IACP,OAAO,IAAI,CAACb,KAAK,CAACQ,YAAY,GAC7B,IAAI,CAACG,cAAc,EAAE,GAAG,IAAI,CAACC,iBAAiB,EAAE;EAEnD;AACF;AAEA,eAAenB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}