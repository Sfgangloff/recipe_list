{"ast":null,"code":"var _jsxFileName = \"/home/silvere/Desktop/Apps/recipelist/src/editable.js\";\nimport { relativeTimeRounding } from 'moment';\nimport React, { Component } from 'react';\nimport { doc, addDoc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CommentList extends Component {\n  constructor(props) {\n    super(props);\n\n    // Note: Prend en entree une liste de commentaires à afficher\n    // Chaque commentaire est un editable, seulement un a la fois peut etre edite. \n    this.updateComponentValue = async e => {\n      const newValue = this.refs.theTextInput.value;\n      const recipe = await getDoc(this.state.recipe);\n      var comments = recipe.data().comments;\n      if (e.key === \"Enter\" && newValue !== \"\") {\n        this.setState({\n          value: newValue\n        });\n        this.setState({\n          isInEditMode: false\n        });\n        comments[this.state.rank] = newValue;\n        await updateDoc(this.state.recipe, {\n          comments: comments\n        });\n      }\n      if (e.key === \"Enter\" && newValue === \"\") {\n        this.setState({\n          isInEditMode: false,\n          value: \"\"\n        });\n        comments.splice(this.state.rank, 1);\n        comments.push(\"###################################################\");\n        await updateDoc(this.state.recipe, {\n          comments: comments\n        });\n      }\n    };\n    const valueLength = this.props.value.length;\n    const isInEditMode = [];\n    for (let i = 0; i < valueLength; i++) {\n      isInEditMode.push(false);\n    }\n    this.state = {\n      value: this.props.value,\n      isInEditMode: isInEditMode,\n      recipe: this.props.recipe\n    };\n    this.changeEditMode = this.changeEditMode.bind(this);\n    this.renderEditView = this.renderEditView.bind(this);\n    this.renderDefaultView = this.renderDefaultView.bind(this);\n    this.updateComponentValue = this.updateComponentValue.bind(this);\n  }\n  changeEditMode(j) {\n    const newEditMode = [];\n    for (let i = 0; i < valueLength; i++) {\n      if (i === j) {\n        newEditMode.push(false);\n      } else {\n        newEditMode.push(true);\n      }\n    }\n    this.setState({\n      isInEditMode: newEditMode\n    });\n  }\n  renderEditView() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: this.state.value,\n        ref: \"theTextInput\",\n        onKeyPress: this.updateComponentValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }, this);\n  }\n  renderDefaultView() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onDoubleClick: this.changeEditMode,\n      children: this.state.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }, this);\n  }\n  render() {\n    return this.state.isInEditMode ? this.renderEditView() : this.renderDefaultView();\n  }\n}\nexport default CommentList;","map":{"version":3,"names":["relativeTimeRounding","React","Component","doc","addDoc","getDoc","updateDoc","CommentList","constructor","props","updateComponentValue","e","newValue","refs","theTextInput","value","recipe","state","comments","data","key","setState","isInEditMode","rank","splice","push","valueLength","length","i","changeEditMode","bind","renderEditView","renderDefaultView","j","newEditMode","render"],"sources":["/home/silvere/Desktop/Apps/recipelist/src/editable.js"],"sourcesContent":["import { relativeTimeRounding } from 'moment';\nimport React, { Component } from 'react';\nimport {doc, addDoc, getDoc, updateDoc} from \"firebase/firestore\"\n\n\nclass CommentList extends Component {\n\n  constructor(props) {\n    super(props)\n\n    // Note: Prend en entree une liste de commentaires à afficher\n    // Chaque commentaire est un editable, seulement un a la fois peut etre edite. \n\n    const valueLength = this.props.value.length\n    const isInEditMode=[]\n    for (let i=0; i < valueLength; i++) {\n      isInEditMode.push(false)\n    }\n    \n\n     this.state = {\n        value:this.props.value, \n        isInEditMode:isInEditMode,\n        recipe:this.props.recipe\n      }\n\n    this.changeEditMode = this.changeEditMode.bind(this)\n    this.renderEditView = this.renderEditView.bind(this)\n    this.renderDefaultView = this.renderDefaultView.bind(this)\n    this.updateComponentValue = this.updateComponentValue.bind(this)\n    \n  \n}\n\nchangeEditMode(j) {\n  const newEditMode=[]\n  for (let i=0; i < valueLength; i++) {\n    if (i===j) {\n      newEditMode.push(false)\n    } else {\n      newEditMode.push(true)\n    }\n  }\n\n  this.setState(\n    {\n      isInEditMode:newEditMode\n    }\n  )\n}\n\nupdateComponentValue = async e => {\n  const newValue = this.refs.theTextInput.value\n  const recipe = await getDoc(this.state.recipe);\n  var comments = recipe.data().comments\n\n  if (e.key === \"Enter\" && newValue !==\"\") {\n    this.setState({\n      value:newValue})\n    this.setState({\n      isInEditMode:false})\n    comments[this.state.rank] = newValue\n    await updateDoc(this.state.recipe,{comments:comments})\n    }\n    \n\n  if (e.key === \"Enter\" && newValue ===\"\") {\n    this.setState({\n    isInEditMode:false,\n    value: \"\"})\n    comments.splice(this.state.rank,1)\n    comments.push(\"###################################################\")\n    await updateDoc(this.state.recipe,{comments:comments})\n}\n}\n\nrenderEditView() {\n\n  return <div>\n    <input type=\"text\" \n           defaultValue={this.state.value}\n           ref=\"theTextInput\" onKeyPress={this.updateComponentValue}/>\n  </div>\n}\n\nrenderDefaultView() {\n  return <div onDoubleClick = {this.changeEditMode}> \n  {this.state.value}\n</div>\n}\n\n  render() {\n    return this.state.isInEditMode ? \n     this.renderEditView() : this.renderDefaultView()\n    \n  }\n}\n\nexport default CommentList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}