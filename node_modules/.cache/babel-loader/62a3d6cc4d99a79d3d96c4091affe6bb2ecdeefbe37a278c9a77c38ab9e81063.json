{"ast":null,"code":"var _jsxFileName = \"/home/silvere/Desktop/Apps/recipelist/src/editable.js\";\nimport { db } from \"./firebase.config\";\nimport { relativeTimeRounding } from 'moment';\nimport React, { Component, createRef } from 'react';\nimport { collection, doc, addDoc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Comment extends Component {\n  constructor(props) {\n    super(props);\n    this.renderDefaultView = async () => {\n      const docRef = doc(db, \"comments\", this.state.id);\n      const docSnap = await getDoc(docRef);\n      console.log(docSnap.data().text);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onDoubleClick: this.changeEditMode,\n        children: docSnap.data().text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }, this);\n    };\n    this.state = {\n      id: this.props.id,\n      isInEditMode: false\n    };\n    this.changeEditMode = this.changeEditMode.bind(this);\n    this.renderEditView = this.renderEditView.bind(this);\n    this.renderDefaultView = this.renderDefaultView.bind(this);\n    this.updateComponentValue = this.updateComponentValue.bind(this);\n  }\n  changeEditMode() {\n    this.setState({\n      isInEditMode: !this.state.isInEditMode\n    });\n  }\n  updateComponentValue(e) {\n    const commentsCollectionRef = collection(db, \"comments\");\n    if (e.key === \"Enter\") {\n      commentsCollectionRef.doc(this.state.id).update({\n        text: this.refs.theTextInput.value\n      });\n      this.setState({\n        isInEditMode: false\n      });\n    }\n  }\n  renderEditView() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: \"\",\n        ref: \"theTextInput\",\n        onKeyPress: this.updateComponentValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this);\n  }\n  render() {\n    return this.state.isInEditMode ? this.renderEditView() : this.renderDefaultView();\n  }\n}\nexport default Comment;","map":{"version":3,"names":["db","relativeTimeRounding","React","Component","createRef","collection","doc","addDoc","getDoc","updateDoc","Comment","constructor","props","renderDefaultView","docRef","state","id","docSnap","console","log","data","text","changeEditMode","isInEditMode","bind","renderEditView","updateComponentValue","setState","e","commentsCollectionRef","key","update","refs","theTextInput","value","render"],"sources":["/home/silvere/Desktop/Apps/recipelist/src/editable.js"],"sourcesContent":["import { db } from \"./firebase.config\"\nimport { relativeTimeRounding } from 'moment';\nimport React, { Component, createRef } from 'react';\nimport {collection, doc, addDoc, getDoc, updateDoc} from \"firebase/firestore\"\n\n\nclass Comment extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n        id:this.props.id, \n        isInEditMode:false\n      }\n\n    this.changeEditMode = this.changeEditMode.bind(this)\n    this.renderEditView = this.renderEditView.bind(this)\n    this.renderDefaultView = this.renderDefaultView.bind(this)\n    this.updateComponentValue = this.updateComponentValue.bind(this)\n    \n  \n}\n\n\nchangeEditMode() {\n  this.setState(\n    {\n      isInEditMode:!this.state.isInEditMode\n    }\n  )\n}\n\n\n\nupdateComponentValue(e) {\n  const commentsCollectionRef = collection(db,\"comments\")\n  if (e.key === \"Enter\") {\n    commentsCollectionRef.doc(this.state.id).update({text:this.refs.theTextInput.value});\n    this.setState({\n    isInEditMode:false\n  })\n    \n  }\n}\n\nrenderEditView() {\n\n  return <div>\n    <input type=\"text\" \n           defaultValue={\"\"}\n           ref=\"theTextInput\" onKeyPress={this.updateComponentValue}/>\n  </div>\n}\n\nrenderDefaultView = async () => {\n  const docRef = doc(db, \"comments\", this.state.id)\n  const docSnap = await getDoc(docRef)\n  console.log(docSnap.data().text)\n  return <div onDoubleClick = {this.changeEditMode}> \n  {docSnap.data().text}\n</div>\n}\n\n  render() {\n    return this.state.isInEditMode ? \n     this.renderEditView() : this.renderDefaultView()\n    \n  }\n}\n\nexport default Comment;"],"mappings":";AAAA,SAASA,EAAE,QAAQ,mBAAmB;AACtC,SAASC,oBAAoB,QAAQ,QAAQ;AAC7C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAAQC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAO,oBAAoB;AAAA;AAG7E,MAAMC,OAAO,SAASP,SAAS,CAAC;EAE9BQ,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAA,KA8ChBC,iBAAiB,GAAG,YAAY;MAC9B,MAAMC,MAAM,GAAGR,GAAG,CAACN,EAAE,EAAE,UAAU,EAAE,IAAI,CAACe,KAAK,CAACC,EAAE,CAAC;MACjD,MAAMC,OAAO,GAAG,MAAMT,MAAM,CAACM,MAAM,CAAC;MACpCI,OAAO,CAACC,GAAG,CAACF,OAAO,CAACG,IAAI,EAAE,CAACC,IAAI,CAAC;MAChC,oBAAO;QAAK,aAAa,EAAI,IAAI,CAACC,cAAe;QAAA,UAChDL,OAAO,CAACG,IAAI,EAAE,CAACC;MAAI;QAAA;QAAA;QAAA;MAAA,QAChB;IACN,CAAC;IAnDG,IAAI,CAACN,KAAK,GAAG;MACTC,EAAE,EAAC,IAAI,CAACJ,KAAK,CAACI,EAAE;MAChBO,YAAY,EAAC;IACf,CAAC;IAEH,IAAI,CAACD,cAAc,GAAG,IAAI,CAACA,cAAc,CAACE,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACD,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACX,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACW,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACE,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACF,IAAI,CAAC,IAAI,CAAC;EAGpE;EAGAF,cAAc,GAAG;IACf,IAAI,CAACK,QAAQ,CACX;MACEJ,YAAY,EAAC,CAAC,IAAI,CAACR,KAAK,CAACQ;IAC3B,CAAC,CACF;EACH;EAIAG,oBAAoB,CAACE,CAAC,EAAE;IACtB,MAAMC,qBAAqB,GAAGxB,UAAU,CAACL,EAAE,EAAC,UAAU,CAAC;IACvD,IAAI4B,CAAC,CAACE,GAAG,KAAK,OAAO,EAAE;MACrBD,qBAAqB,CAACvB,GAAG,CAAC,IAAI,CAACS,KAAK,CAACC,EAAE,CAAC,CAACe,MAAM,CAAC;QAACV,IAAI,EAAC,IAAI,CAACW,IAAI,CAACC,YAAY,CAACC;MAAK,CAAC,CAAC;MACpF,IAAI,CAACP,QAAQ,CAAC;QACdJ,YAAY,EAAC;MACf,CAAC,CAAC;IAEF;EACF;EAEAE,cAAc,GAAG;IAEf,oBAAO;MAAA,uBACL;QAAO,IAAI,EAAC,MAAM;QACX,YAAY,EAAE,EAAG;QACjB,GAAG,EAAC,cAAc;QAAC,UAAU,EAAE,IAAI,CAACC;MAAqB;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC9D;EACR;EAWES,MAAM,GAAG;IACP,OAAO,IAAI,CAACpB,KAAK,CAACQ,YAAY,GAC7B,IAAI,CAACE,cAAc,EAAE,GAAG,IAAI,CAACZ,iBAAiB,EAAE;EAEnD;AACF;AAEA,eAAeH,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}