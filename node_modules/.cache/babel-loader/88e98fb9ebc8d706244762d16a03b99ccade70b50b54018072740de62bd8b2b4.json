{"ast":null,"code":"var _jsxFileName = \"/home/silvere/Desktop/Apps/recipelist/src/editable.js\";\nimport { db } from \"./firebase.config\";\nimport { relativeTimeRounding } from 'moment';\nimport React, { Component, createRef } from 'react';\nimport { collection, doc, addDoc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Comment extends Component {\n  // TODO: Make one instance of a class for each comment \n  // There can be only one blank comment per recipe. \n  // When editing the blank comment, it is not replaced but a new comment is created.\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.id,\n      isInEditMode: false,\n      recipesRef: this.props.recipesRef\n    };\n    this.changeEditMode = this.changeEditMode.bind(this);\n    this.renderEditView = this.renderEditView.bind(this);\n    this.renderDefaultView = this.renderDefaultView.bind(this);\n    this.updateComponentValue = this.updateComponentValue.bind(this);\n  }\n  hangeEditMode() {\n    this.setState({\n      isInEditMode: !this.state.isInEditMode\n    });\n  }\n  updateComponentValue(e) {\n    const commentsCollectionRef = collection(db, \"comments\");\n    if (e.key == \"Enter\") {\n      commentsCollectionRef.doc(this.state.id).update({\n        text: this.refs.theTextInput.value\n      });\n      this.setState({\n        isInEditMode: false,\n        value: this.refs.theTextInput.value\n      });\n    }\n  }\n  renderEditView() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: this.state.value,\n        ref: \"theTextInput\",\n        onKeyPress: this.updateComponentValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }, this);\n  }\n  renderDefaultView() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onDoubleClick: this.changeEditMode,\n      children: this.state.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this);\n  }\n  render() {\n    return this.state.isInEditMode ? this.renderEditView() : this.renderDefaultView();\n  }\n}\nexport default Comment;","map":{"version":3,"names":["db","relativeTimeRounding","React","Component","createRef","collection","doc","addDoc","getDoc","updateDoc","Comment","constructor","props","state","id","isInEditMode","recipesRef","changeEditMode","bind","renderEditView","renderDefaultView","updateComponentValue","hangeEditMode","setState","e","commentsCollectionRef","key","update","text","refs","theTextInput","value","render"],"sources":["/home/silvere/Desktop/Apps/recipelist/src/editable.js"],"sourcesContent":["import { db } from \"./firebase.config\"\nimport { relativeTimeRounding } from 'moment';\nimport React, { Component, createRef } from 'react';\nimport {collection, doc, addDoc, getDoc, updateDoc} from \"firebase/firestore\"\n\n\nclass Comment extends Component {\n\n  // TODO: Make one instance of a class for each comment \n  // There can be only one blank comment per recipe. \n  // When editing the blank comment, it is not replaced but a new comment is created.\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n        id:this.props.id, \n        isInEditMode:false, \n        recipesRef:this.props.recipesRef\n      }\n\n    this.changeEditMode = this.changeEditMode.bind(this)\n    this.renderEditView = this.renderEditView.bind(this)\n    this.renderDefaultView = this.renderDefaultView.bind(this)\n    this.updateComponentValue = this.updateComponentValue.bind(this)\n    \n  \n}\nhangeEditMode() {\n  this.setState(\n    {\n      isInEditMode:!this.state.isInEditMode\n    }\n  )\n}\n\n\n\nupdateComponentValue(e) {\n  const commentsCollectionRef = collection(db,\"comments\")\n  if (e.key == \"Enter\") {\n    commentsCollectionRef.doc(this.state.id).update({text:this.refs.theTextInput.value});\n    this.setState({\n    isInEditMode:false,\n    value: this.refs.theTextInput.value\n  })\n    \n  }\n}\n\nrenderEditView() {\n\n  return <div>\n    <input type=\"text\" \n           defaultValue={this.state.value}\n           ref=\"theTextInput\" onKeyPress={this.updateComponentValue}/>\n  </div>\n}\n\nrenderDefaultView() {\n  return <div onDoubleClick = {this.changeEditMode}> \n  {this.state.value}\n</div>\n}\n\n  render() {\n    return this.state.isInEditMode ? \n     this.renderEditView() : this.renderDefaultView()\n    \n  }\n}\n\nexport default Comment;"],"mappings":";AAAA,SAASA,EAAE,QAAQ,mBAAmB;AACtC,SAASC,oBAAoB,QAAQ,QAAQ;AAC7C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAAQC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAO,oBAAoB;AAAA;AAG7E,MAAMC,OAAO,SAASP,SAAS,CAAC;EAE9B;EACA;EACA;;EAEAQ,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,EAAE,EAAC,IAAI,CAACF,KAAK,CAACE,EAAE;MAChBC,YAAY,EAAC,KAAK;MAClBC,UAAU,EAAC,IAAI,CAACJ,KAAK,CAACI;IACxB,CAAC;IAEH,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACD,IAAI,CAAC,IAAI,CAAC;IACpD,IAAI,CAACE,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACF,IAAI,CAAC,IAAI,CAAC;IAC1D,IAAI,CAACG,oBAAoB,GAAG,IAAI,CAACA,oBAAoB,CAACH,IAAI,CAAC,IAAI,CAAC;EAGpE;EACAI,aAAa,GAAG;IACd,IAAI,CAACC,QAAQ,CACX;MACER,YAAY,EAAC,CAAC,IAAI,CAACF,KAAK,CAACE;IAC3B,CAAC,CACF;EACH;EAIAM,oBAAoB,CAACG,CAAC,EAAE;IACtB,MAAMC,qBAAqB,GAAGpB,UAAU,CAACL,EAAE,EAAC,UAAU,CAAC;IACvD,IAAIwB,CAAC,CAACE,GAAG,IAAI,OAAO,EAAE;MACpBD,qBAAqB,CAACnB,GAAG,CAAC,IAAI,CAACO,KAAK,CAACC,EAAE,CAAC,CAACa,MAAM,CAAC;QAACC,IAAI,EAAC,IAAI,CAACC,IAAI,CAACC,YAAY,CAACC;MAAK,CAAC,CAAC;MACpF,IAAI,CAACR,QAAQ,CAAC;QACdR,YAAY,EAAC,KAAK;QAClBgB,KAAK,EAAE,IAAI,CAACF,IAAI,CAACC,YAAY,CAACC;MAChC,CAAC,CAAC;IAEF;EACF;EAEAZ,cAAc,GAAG;IAEf,oBAAO;MAAA,uBACL;QAAO,IAAI,EAAC,MAAM;QACX,YAAY,EAAE,IAAI,CAACN,KAAK,CAACkB,KAAM;QAC/B,GAAG,EAAC,cAAc;QAAC,UAAU,EAAE,IAAI,CAACV;MAAqB;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC9D;EACR;EAEAD,iBAAiB,GAAG;IAClB,oBAAO;MAAK,aAAa,EAAI,IAAI,CAACH,cAAe;MAAA,UAChD,IAAI,CAACJ,KAAK,CAACkB;IAAK;MAAA;MAAA;MAAA;IAAA,QACb;EACN;EAEEC,MAAM,GAAG;IACP,OAAO,IAAI,CAACnB,KAAK,CAACE,YAAY,GAC7B,IAAI,CAACI,cAAc,EAAE,GAAG,IAAI,CAACC,iBAAiB,EAAE;EAEnD;AACF;AAEA,eAAeV,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}