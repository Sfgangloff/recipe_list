{"ast":null,"code":"var _jsxFileName = \"/home/silvere/Desktop/Apps/recipelist/src/editable.js\";\nimport { relativeTimeRounding } from 'moment';\nimport React, { Component, createRef } from 'react';\nimport { doc, addDoc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CommentList extends Component {\n  constructor(props) {\n    super(props);\n    this.changeEditMode = j => {\n      const newEditMode = [];\n      const valueLength = this.props.value.length;\n      for (let i = 0; i < valueLength; i++) {\n        if (i === j) {\n          newEditMode.push(true);\n        } else {\n          newEditMode.push(false);\n        }\n      }\n      this.setState({\n        isInEditMode: newEditMode\n      });\n    };\n    this.updateComponentValue = async (e, rank) => {\n      const newValue = this.someRef.current.value;\n      const recipe = await getDoc(this.state.recipe);\n      var comments = recipe.data().comments;\n      const newEditMode = [];\n      const valueLength = this.props.value.length;\n      const counter = 0;\n      for (let i = 0; i < valueLength; i++) {\n        newEditMode.push(false);\n      }\n      for (let i = 0; i < valueLength; i++) {\n        if (this.isInEditMode[i] === true) {\n          counter = 1;\n        }\n      }\n      if (counter === 1 && e.key === \"Enter\" && newValue !== \"\") {\n        comments[rank] = newValue;\n        this.setState({\n          value: comments\n        });\n        this.setState({\n          isInEditMode: newEditMode\n        });\n        await updateDoc(this.state.recipe, {\n          comments: comments\n        });\n      }\n      if (counter === 1 && e.key === \"Enter\" && newValue === \"\") {\n        comments.splice(this.state.rank, 1);\n        comments.push(\"###################################################\");\n        this.setState({\n          isInEditMode: newEditMode\n        });\n        this.setState({\n          value: comments\n        });\n        await updateDoc(this.state.recipe, {\n          comments: comments\n        });\n      }\n    };\n    this.renderEditView = rank => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          defaultValue: this.state.value[rank],\n          ref: this.someRef,\n          onKeyPress: e => this.updateComponentValue(e, rank)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }, this);\n    };\n    this.renderDefaultView = rank => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onDoubleClick: this.changeEditMode(rank),\n        children: this.state.value[rank]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 10\n      }, this);\n    };\n    const _valueLength = this.props.value.length;\n    const isInEditMode = [];\n    for (let i = 0; i < _valueLength; i++) {\n      isInEditMode.push(false);\n    }\n    this.state = {\n      value: this.props.value,\n      isInEditMode: isInEditMode,\n      recipe: this.props.recipe\n    };\n    this.someRef = /*#__PURE__*/React.createRef();\n    this.changeEditMode = this.changeEditMode.bind(this);\n    this.renderEditView = this.renderEditView.bind(this);\n    this.renderDefaultView = this.renderDefaultView.bind(this);\n    this.updateComponentValue = this.updateComponentValue.bind(this);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: this.state.value.map((comment, rank) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", this.state.isInEditMode[rank] ? this.renderEditView(rank) : this.renderDefaultView(rank), \" \"]\n      }, rank, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default CommentList;","map":{"version":3,"names":["relativeTimeRounding","React","Component","createRef","doc","addDoc","getDoc","updateDoc","CommentList","constructor","props","changeEditMode","j","newEditMode","valueLength","value","length","i","push","setState","isInEditMode","updateComponentValue","e","rank","newValue","someRef","current","recipe","state","comments","data","counter","key","splice","renderEditView","renderDefaultView","bind","render","map","comment"],"sources":["/home/silvere/Desktop/Apps/recipelist/src/editable.js"],"sourcesContent":["import { relativeTimeRounding } from 'moment';\nimport React, { Component, createRef } from 'react';\nimport {doc, addDoc, getDoc, updateDoc} from \"firebase/firestore\"\n\n\nclass CommentList extends Component {\n\n  constructor(props) {\n    super(props)\n\n    const valueLength = this.props.value.length\n    const isInEditMode=[]\n    for (let i=0; i < valueLength; i++) {\n      isInEditMode.push(false)\n    }\n    \n\n    this.state = {\n        value:this.props.value, \n        isInEditMode:isInEditMode,\n        recipe:this.props.recipe\n      }\n    this.someRef = React.createRef()\n\n    this.changeEditMode = this.changeEditMode.bind(this)\n    this.renderEditView = this.renderEditView.bind(this)\n    this.renderDefaultView = this.renderDefaultView.bind(this)\n    this.updateComponentValue = this.updateComponentValue.bind(this)\n    \n  \n}\n\nchangeEditMode = (j) => {\n  const newEditMode=[]\n  const valueLength = this.props.value.length\n  for (let i=0; i < valueLength; i++) {\n    if (i===j) {\n      newEditMode.push(true)\n    } else {\n      newEditMode.push(false)\n    }\n  }\n\n  this.setState(\n    {\n      isInEditMode:newEditMode\n    }\n  )\n}\n\nupdateComponentValue = async (e,rank) => {\n  const newValue = this.someRef.current.value\n  const recipe = await getDoc(this.state.recipe);\n  var comments = recipe.data().comments\n\n  const newEditMode=[]\n  const valueLength = this.props.value.length\n  const counter = 0\n  for (let i=0; i < valueLength; i++) {\n      newEditMode.push(false) \n    }\n  \n  for (let i=0; i < valueLength; i++) {\n      if (this.isInEditMode[i] === true) {\n        counter = 1\n      }\n    }\n\n  if (counter ===1 && e.key === \"Enter\" && newValue !==\"\") {\n    comments[rank] = newValue\n\n    this.setState({\n        value:comments})\n    this.setState({\n        isInEditMode:newEditMode})\n    \n    await updateDoc(this.state.recipe,{comments:comments})\n    }\n    \n\n  if (counter ===1 && e.key === \"Enter\" && newValue ===\"\") {\n    comments.splice(this.state.rank,1)\n    comments.push(\"###################################################\")\n    this.setState({\n    isInEditMode:newEditMode})\n    this.setState({\n      value:comments})\n    \n    await updateDoc(this.state.recipe,{comments:comments})\n}\n}\n\nrenderEditView = (rank) => {\n\n  return <div>\n    <input type=\"text\" \n           defaultValue={this.state.value[rank]}\n           ref={this.someRef} onKeyPress={(e) => this.updateComponentValue(e,rank)}/>\n            \n  </div>\n}\n\nrenderDefaultView = (rank) => {\n  return <div onDoubleClick = {this.changeEditMode(rank)}> \n  {this.state.value[rank]}\n  \n</div>\n}\n\nrender() {     \n  \n    return <ol>{this.state.value.map((comment,rank) => (\n      <li key={rank}> {this.state.isInEditMode[rank] ? \n      this.renderEditView(rank) : this.renderDefaultView(rank)} </li>\n    ))}\n    </ol>\n    \n  }\n}\n\nexport default CommentList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}