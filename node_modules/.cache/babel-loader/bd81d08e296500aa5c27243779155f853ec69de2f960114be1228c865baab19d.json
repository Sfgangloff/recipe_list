{"ast":null,"code":"var _jsxFileName = \"/home/silvere/Desktop/Apps/recipelist/src/editable.js\";\nimport { relativeTimeRounding } from 'moment';\nimport React, { Component } from 'react';\nimport { doc, addDoc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Comment extends Component {\n  constructor(props) {\n    super(props);\n    this.updateComponentValue = async e => {\n      if (e.key == \"Enter\") {\n        e.preventDefault();\n        this.setState({\n          isInEditMode: false,\n          value: this.refs.theTextInput.value\n        });\n        const recipe = await getDoc(this.state.recipe);\n        const comments = recipe.data().comments;\n        console.log(comments);\n        comments[this.state.rank] = this.state.value;\n        console.log(comments);\n        await updateDoc(this.state.recipe, {\n          comments: comments\n        });\n      }\n    };\n    if (this.props.value != \"\") {\n      this.state = {\n        value: this.props.value,\n        isInEditMode: false,\n        recipe: this.props.recipe,\n        rank: this.props.commentRank\n      };\n    } else {\n      this.state = {\n        value: \"###################################################\",\n        isInEditMode: false,\n        recipe: this.props.recipe,\n        rank: this.props.commentRank\n      };\n    }\n    this.changeEditMode = this.changeEditMode.bind(this);\n    this.renderEditView = this.renderEditView.bind(this);\n    this.renderDefaultView = this.renderDefaultView.bind(this);\n    this.updateComponentValue = this.updateComponentValue.bind(this);\n  }\n  changeEditMode() {\n    this.setState({\n      isInEditMode: !this.state.isInEditMode\n    });\n  }\n  renderEditView() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: this.state.value,\n        ref: \"theTextInput\",\n        onKeyPress: this.updateComponentValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }, this);\n  }\n  renderDefaultView() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onDoubleClick: this.changeEditMode,\n      children: this.state.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 10\n    }, this);\n  }\n  render() {\n    return this.state.isInEditMode ? this.renderEditView() : this.renderDefaultView();\n  }\n}\nexport default Comment;","map":{"version":3,"names":["relativeTimeRounding","React","Component","doc","addDoc","getDoc","updateDoc","Comment","constructor","props","updateComponentValue","e","key","preventDefault","setState","isInEditMode","value","refs","theTextInput","recipe","state","comments","data","console","log","rank","commentRank","changeEditMode","bind","renderEditView","renderDefaultView","render"],"sources":["/home/silvere/Desktop/Apps/recipelist/src/editable.js"],"sourcesContent":["import { relativeTimeRounding } from 'moment';\nimport React, { Component } from 'react';\nimport {doc, addDoc, getDoc, updateDoc} from \"firebase/firestore\"\n\n\nclass Comment extends Component {\n\n  constructor(props) {\n    super(props)\n\n    if (this.props.value!=\"\") {\n      this.state = {\n        value:this.props.value, \n        isInEditMode:false,\n        recipe:this.props.recipe,\n        rank:this.props.commentRank\n      }\n    } else {\n      this.state = {\n        value:\"###################################################\", \n        isInEditMode:false,\n        recipe:this.props.recipe,\n        rank:this.props.commentRank\n      }\n    }\n\n    this.changeEditMode = this.changeEditMode.bind(this)\n    this.renderEditView = this.renderEditView.bind(this)\n    this.renderDefaultView = this.renderDefaultView.bind(this)\n    this.updateComponentValue = this.updateComponentValue.bind(this)\n    \n  \n}\n\nchangeEditMode() {\n  this.setState(\n    {\n      isInEditMode:!this.state.isInEditMode\n    }\n  )\n}\n\nupdateComponentValue = async e => {\n  if (e.key == \"Enter\") {\n    e.preventDefault();\n    this.setState({\n    isInEditMode:false,\n    value: this.refs.theTextInput.value\n  })\n\n  \n  const recipe = await getDoc(this.state.recipe);\n  const comments = recipe.data().comments\n  console.log(comments)\n  comments[this.state.rank] = this.state.value\n  console.log(comments)\n  await updateDoc(this.state.recipe,{comments:comments});\n  }\n}\n\nrenderEditView() {\n\n  return <div>\n    <input type=\"text\" \n           defaultValue={this.state.value}\n           ref=\"theTextInput\" onKeyPress={this.updateComponentValue}/>\n  </div>\n}\n\nrenderDefaultView() {\n  return <div onDoubleClick = {this.changeEditMode}> \n  {this.state.value}\n</div>\n}\n\n  render() {\n    return this.state.isInEditMode ? \n     this.renderEditView() : this.renderDefaultView()\n    \n  }\n}\n\nexport default Comment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}